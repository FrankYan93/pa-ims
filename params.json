{
  "name": "Pa-ims",
  "tagline": "cosi105b_homework1",
  "body": "# IMS<a href=\"https://codeclimate.com/github/FrankYan93/pa-ims\"><img src=\"https://codeclimate.com/github/FrankYan93/pa-ims/badges/gpa.svg\" /></a>\r\n# Author\r\n- **Jiadong Yan**\r\n\r\n# Brief Intro\r\nThis is a little ruby shell program that records tracks and artists and the play frequency.\r\n# Getting Started\r\nAfter `chmod u+x ims`, you can run the program just type `./ims`  \r\nThere are two files **ims and ims.rb** work as main entrance of the program.  \r\nTheir content is same.   \r\nYou can run ims either by `ruby ims` or `ruby ims.rb`.\r\nI've tried **PStore** and **YAML:Store**.\r\nPStore is quick but not readable while YAML:Store is readable but not so quick.\r\n\r\n# Data\r\n{    tracks => an array includes artist and played times,\r\n  ...  }\r\n\r\n# My Solution:  \r\n  class `IMS_Loop` :do the loop job  \r\n  class `Commmand` :respond to user's commands  \r\n  class `Track_artist` :display and add track,artist pair to YAML:Store  \r\n  JSON data :store the data to and from YAML:Store  \r\n  Hash data0 :transform data into hash to do the job easily, then restore to data  \r\n\r\n  use `case` to switch from different commands,  \r\n  identify ` by ` to seperate track and artist,  \r\n  use a class `Track_artist` to add new tracks and display,  \r\n  command `Help` to see all commands.  \r\n\r\n# Unit Test\r\n**test_ims.rb** used for testing some commands's performance.\r\n\r\n\r\n## Thank you for reading.\r\n## Version 12/9/2016\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}